//@author: elliotwoods
//@help: 
//@tags: lines
//@credits: 

Texture2D<float3> worldTexture : PREVIOUS;
Texture3D<float> volumeTexture;
float4x4 tWorldToTexture <String uiname="Transform World To Texture";>;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float4 world;
	world.xyz = worldTexture.Sample(linearSampler,input.uv);
	world.w = 1.0f;
	
	float4 textureCoords = mul(world, tWorldToTexture);
	textureCoords /= textureCoords.w;
	
	return volumeTexture.Sample(linearSampler, textureCoords.xyz);
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



