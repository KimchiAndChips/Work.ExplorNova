//@author: elliotwoods
//@help: 
//@tags: lines
//@credits: 
#define FIELD_BUFFER_READONLY
#include "../dx11/FieldStruct.fxh"

Texture2D<float3> worldTexture : PREVIOUS;
float4x4 tWorldToTexture <String uiname="Transform World To Texture";>;
StructuredBuffer<float> Highlight;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};

int Count = 1024;

float4 PS(psInput input) : SV_Target
{
	float4 world;
	world.xyz = worldTexture.Sample(linearSampler,input.uv);
	world.w = 1.0f;
	
	float4 output;
	output.rgb = getPressureAtObject(world.xyz);
	output.a = 1.0f;
	
	int lineIndex = input.uv.y * (float) Count;
	output.r = Highlight[lineIndex];
	
	return output;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_5_0,PS()));
	}
}



